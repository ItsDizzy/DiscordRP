buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.10"
}

apply plugin: 'net.minecraftforge.gradle.forge'

def build_number

if (System.getenv('APPVEYOR_BUILD_NUMBER') != null)
    build_number = System.getenv('APPVEYOR_BUILD_NUMBER')
else
    build_number = "git rev-parse --short HEAD".execute().text.trim()

version = "${discordrp_version}.${build_number}"
group = "me.paulhobbel.discordrp"
archivesBaseName = "DiscordRP-${mc_version}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mcp_version}"

    replace "@VERSION@", project.version

    replaceIn "DiscordRP.java"
}

dependencies {

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.api.output
    from sourceSets.api.allJava
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        System.getenv("SIGNING_STORE_PASS") != null
    }

    keyStore = "keystore.jks"
    alias = System.getenv("SIGNING_ALIAS")

    storePass = System.getenv("SIGNING_STORE_PASS")
    keyPass = System.getenv("SIGNING_KEY_PASS") != null ? System.getenv("SIGNING_KEY_PASS") : System.getenv("SIGNING_STORE_PASS")

    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

curseforge {
    if (System.getenv("CF_APIKEY") != null)
        apiKey = System.getenv("CF_APIKEY")

    project {
        id = "296803"
        changelog = file("CHANGELOG.md")
        changelogType = "markdown"
        releaseType = 'beta'

        addArtifact sourcesJar
        addArtifact apiJar
    }
}

tasks.build.dependsOn apiJar, sourcesJar, signJar