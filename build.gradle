buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.10"
}

apply plugin: 'net.minecraftforge.gradle.forge'

def build_number

if (System.getenv('APPVEYOR_BUILD_NUMBER') != null)
    build_number = System.getenv('APPVEYOR_BUILD_NUMBER')
else
    build_number = "git rev-parse --short HEAD".execute().text.trim()

version = "${discordrp_version}.${build_number}"
group = "me.paulhobbel.discordrp"
archivesBaseName = "DiscordRP-${mc_version}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mcp_version}"

    replace "@VERSION@", project.version

    replaceIn "DiscordRP.java"
    makeObfSourceJar = true
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.api.output
    from sourceSets.api.allJava
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

tasks.build.dependsOn apiJar, sourcesJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

curseforge {
    if (System.getenv("CF_APIKEY") != null && System.getenv("CF_DEPLOY") == "true")
        apiKey = System.getenv("CF_APIKEY")

    project {
        id = "296803"
        changelog = file("CHANGELOG.md")
        changelogType = "markdown"
        releaseType = 'beta'

        addArtifact sourcesJar
        addArtifact apiJar
    }
}